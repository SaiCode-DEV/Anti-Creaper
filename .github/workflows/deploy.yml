name: Build and Deploy

on:
  workflow_dispatch:  # Manueller Trigger

jobs:
  # Erster Job: Build
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        java: [21]
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v2
      - name: setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'microsoft'
      - name: make gradle wrapper executable
        run: chmod +x ./gradlew
      - name: build
        run: ./gradlew build
      - name: capture build artifacts
        if: ${{ matrix.java == '21' }}
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts
          path: build/libs/

  # Zweiter Job: GitHub Release und Deployment
  deploy:
    runs-on: ubuntu-22.04
    needs: build  # Der Deploy-Job wird nur ausgef√ºhrt, wenn der Build-Job erfolgreich war
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: Artifacts

      - name: List files in build/libs
        run: |
          echo "Listing files in build/libs directory:"
          ls -l .
      # Schritt zur Erstellung eines GitHub-Releases
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: "v1.0.0"  # Hier kannst du die Version oder den Tag dynamisch festlegen
          release_name: "Release v1.0.0"
          body: "Beschreibung des Releases"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Deployment Schritt zu Modrinth
      - name: deploy to modrinth
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          modrinth-id: Uqqp9wzq
          modrinth-featured: true
          modrinth-unfeature-mode: subset
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}

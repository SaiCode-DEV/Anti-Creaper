# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: build
on:
  push:
    branches:
    - 'main'
    tags:
    - 'v*'
  pull_request:
    branches:
    - 'main'

jobs:
  build:
    strategy:
      matrix:
        # Use these Java versions
        java: [
          21,    # Current Java LTS
        ]
    runs-on: ubuntu-22.04
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v2
      - name: setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'microsoft'
      - name: make gradle wrapper executable
        run: chmod +x ./gradlew
      - name: build
        run: ./gradlew build
      - name: capture build artifacts
        if: ${{ matrix.java == '21' }} # Only upload artifacts built from latest java
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts
          path: build/libs/

release_github:
     name: "Release on GitHub"
     runs-on: ubuntu-latest
     needs: build
     if: startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, 'SNAPSHOT')

     steps:
     - name: Checkout Code
       uses: actions/checkout@v4

     - name: Read Project & Minecraft Version
       id: read_versions
       uses: christian-draeger/read-properties@1.1.1
       with:
         path: ./gradle.properties
         properties: projectBaseVersion mcVersionFull

     - name: Read Changelog
       id: read_changelog
       shell: bash
       run: sed '/===/Q' changelog.txt > current-changelog.txt

     - name: Download Artifacts
       id: download_artifacts
       uses: actions/download-artifact@v4
       with:
         path: build_artifacts

     - name: GitHub Release
       uses: softprops/action-gh-release@v2
       with:
         tag_name: ${{ github.ref }}
         name: Release ${{ steps.read_versions.outputs.projectBaseVersion }} for Minecraft ${{ steps.read_versions.outputs.mcVersionFull }}
         body_path: ./current-changelog.txt
         draft: false
         prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
         token: ${{ secrets.GH_RELEASE_TOKEN }}
         files: |
           ${{ steps.download_artifacts.outputs.download-path }}/fabric-artifacts/*
       env:
         GITHUB_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}


   release_modrinth:
     name: Release on Modrinth
     runs-on: ubuntu-latest
     needs: build
     if: startsWith(github.ref, 'refs/tags/v')

     steps:
     - name: Checkout Code
       uses: actions/checkout@v4

     - name: Setup jdk 21
       uses: actions/setup-java@v4
       with:
         distribution: adopt
         java-version: 21

     - name: Setup Gradle
       uses: gradle/actions/setup-gradle@v3

     - name: Modrinth Publish
       run: ./gradlew modrinth
       env:
         MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}
